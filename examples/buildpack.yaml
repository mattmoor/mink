# DO NOT EDIT THIS IS A GENERATED FILE (see ./hack/update-codegen.sh)


apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildpack
spec:
  description: "An example buildpack task illustrating some of the parameter processing."
  params:
    - name: mink-source-bundle
      description: A self-extracting container image of source
    - name: mink-image-target
      description: Where to publish an image.

    - name: descriptor
      default: "./project.toml"
      description: |
        The path to the project descriptor relative to the source bundle.
        For more information: https://buildpacks.io/docs/app-developer-guide/using-project-descriptor/
    - name: builder
      default: "docker.io/paketobuildpacks/builder:full"
      description: |
        The image uri for the builder to execute.  Some example builders:

        Paketo (default): docker.io/paketobuildpacks/builder:full

        GCP: gcr.io/buildpacks/builder

        Boson (Quarkus): quay.io/boson/faas-quarkus-builder
        Boson (Node.js): quay.io/boson/faas-nodejs-builder
        Boson (Go): quay.io/boson/faas-go-builder

        For more information on builders, see: https://buildpacks.io/docs/concepts/components/builder/

    # TODO(mattmoor): There is not a good way to support integer substitutions in tekton,
    # so we cannot practically make user-id and group-id parameters.

  results:
    - name: mink-image-digest
      description: The digest of the resulting image.

  steps:
    - name: prepare
      image: docker.io/alpine
      workingDir: /workspace
      command: ["/bin/sh"]
      args:
        - "-c"
        - |-
          chown -R "1000:1000" "/tekton/home" &&
          chown -R "1000:1000" "/layers" &&
          chown -R "1000:1000" "/cache" &&
          chown -R "1000:1000" "/workspace"
      volumeMounts: &mounts
        - name: layers-dir
          mountPath: /layers
        - name: empty-dir
          mountPath: /cache
        - name: platform-dir
          mountPath: /platform

    - name: extract-bundle
      image: $(params.mink-source-bundle)
      workingDir: /workspace
      securityContext: &run-as
        runAsUser: 1000
        runAsGroup: 1000

    - name: platform-setup
      image: ko://github.com/mattmoor/mink/cmd/platform-setup
      workingDir: /workspace
      args: ["--descriptor=/workspace/$(params.descriptor)"]
      volumeMounts: *mounts

    - name: create
      image: $(params.builder)
      workingDir: /workspace
      imagePullPolicy: Always
      command: ["/cnb/lifecycle/creator"]
      args:
        - "-layers=/layers"
        - "-app=/workspace"
        - "-cache-dir=/cache"
        - "-platform=/platform"
        - "-uid=1000"
        - "-gid=1000"
        - "$(params.mink-image-target)"
      env:
      - name: DOCKER_CONFIG
        value: /tekton/home/.docker
      volumeMounts: *mounts
      securityContext: *run-as

    - name: extract-digest
      image: ko://github.com/mattmoor/mink/cmd/extract-digest
      workingDir: /workspace
      args: ["-output=/tekton/results/mink-image-digest"]
      volumeMounts: *mounts

  volumes:
    - name: platform-dir
      emptyDir: {}
    - name: layers-dir
      emptyDir: {}
    - name: empty-dir
      emptyDir: {}
