# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller
  namespace: mink-system
  labels:
    knative.dev/release: devel

---
####################################################################
#
#  Contour role bindings for reconciliation and leader election.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: contour
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contour
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: contour-leaderelection
  namespace: mink-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour-leaderelection
subjects:
- kind: ServiceAccount
  name: contour
  namespace: mink-system

---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by knative controllers and webhooks.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-admin
  labels:
    knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: mink-system
roleRef:
  kind: ClusterRole
  name: knative-role
  apiGroup: rbac.authorization.k8s.io

---
####################################################################
#
#  Aggregated cluster role and binding to pull in all capabilities
#  delegated to the knative serving controller.
#
####################################################################
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-admin
  labels:
    knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      serving.knative.dev/controller: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-serving-controller-admin
  labels:
    knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: mink-system
roleRef:
  kind: ClusterRole
  name: knative-serving-admin
  apiGroup: rbac.authorization.k8s.io

---
####################################################################
#
#  Aggregated cluster role and binding to pull in all of the
#  capabilities for addressable resolution.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addressable-resolver
  labels:
    knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      duck.knative.dev/addressable: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mink-addressable-resolver
  labels:
    knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: mink-system
roleRef:
  kind: ClusterRole
  name: addressable-resolver
  apiGroup: rbac.authorization.k8s.io

---
####################################################################
#
#  Aggregated cluster role and binding to pull in all of the
#  capabilities for binding pod specables.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: podspecable-binding
  labels:
    knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      duck.knative.dev/podspecable: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mink-podspecable-binding
  labels:
    knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: mink-system
roleRef:
  kind: ClusterRole
  name: podspecable-binding
  apiGroup: rbac.authorization.k8s.io

---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by tekton controllers and webhooks.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-admin
  labels:
    knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: mink-system
roleRef:
  kind: ClusterRole
  name: tekton-role
  apiGroup: rbac.authorization.k8s.io

---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by the net-contour controller.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: net-contour-admin
  labels:
    knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: mink-system
roleRef:
  kind: ClusterRole
  name: net-contour-role
  apiGroup: rbac.authorization.k8s.io
