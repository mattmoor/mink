/*
Copyright 2019 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/mattmoor/bindings/pkg/apis/bindings/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GoogleCloudSQLBindingLister helps list GoogleCloudSQLBindings.
type GoogleCloudSQLBindingLister interface {
	// List lists all GoogleCloudSQLBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GoogleCloudSQLBinding, err error)
	// GoogleCloudSQLBindings returns an object that can list and get GoogleCloudSQLBindings.
	GoogleCloudSQLBindings(namespace string) GoogleCloudSQLBindingNamespaceLister
	GoogleCloudSQLBindingListerExpansion
}

// googleCloudSQLBindingLister implements the GoogleCloudSQLBindingLister interface.
type googleCloudSQLBindingLister struct {
	indexer cache.Indexer
}

// NewGoogleCloudSQLBindingLister returns a new GoogleCloudSQLBindingLister.
func NewGoogleCloudSQLBindingLister(indexer cache.Indexer) GoogleCloudSQLBindingLister {
	return &googleCloudSQLBindingLister{indexer: indexer}
}

// List lists all GoogleCloudSQLBindings in the indexer.
func (s *googleCloudSQLBindingLister) List(selector labels.Selector) (ret []*v1alpha1.GoogleCloudSQLBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GoogleCloudSQLBinding))
	})
	return ret, err
}

// GoogleCloudSQLBindings returns an object that can list and get GoogleCloudSQLBindings.
func (s *googleCloudSQLBindingLister) GoogleCloudSQLBindings(namespace string) GoogleCloudSQLBindingNamespaceLister {
	return googleCloudSQLBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GoogleCloudSQLBindingNamespaceLister helps list and get GoogleCloudSQLBindings.
type GoogleCloudSQLBindingNamespaceLister interface {
	// List lists all GoogleCloudSQLBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GoogleCloudSQLBinding, err error)
	// Get retrieves the GoogleCloudSQLBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GoogleCloudSQLBinding, error)
	GoogleCloudSQLBindingNamespaceListerExpansion
}

// googleCloudSQLBindingNamespaceLister implements the GoogleCloudSQLBindingNamespaceLister
// interface.
type googleCloudSQLBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GoogleCloudSQLBindings in the indexer for a given namespace.
func (s googleCloudSQLBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GoogleCloudSQLBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GoogleCloudSQLBinding))
	})
	return ret, err
}

// Get retrieves the GoogleCloudSQLBinding from the indexer for a given namespace and name.
func (s googleCloudSQLBindingNamespaceLister) Get(name string) (*v1alpha1.GoogleCloudSQLBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("googlecloudsqlbinding"), name)
	}
	return obj.(*v1alpha1.GoogleCloudSQLBinding), nil
}
